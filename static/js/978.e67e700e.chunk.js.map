{"version":3,"file":"static/js/978.e67e700e.chunk.js","mappings":"4QAGaA,EAAcC,EAAAA,EAAAA,IAAH,yEAKXC,EAAaD,EAAAA,EAAAA,IAAH,uGAMVE,GAAOF,EAAAA,EAAAA,GAAOG,EAAAA,IAAPH,CAAH,6EAKJI,EAAQJ,EAAAA,EAAAA,GAAH,sBACLK,EAAOL,EAAAA,EAAAA,MAAH,2DAIJM,EAAQN,EAAAA,EAAAA,EAAH,6EAILO,EAAcP,EAAAA,EAAAA,QAAH,2DAIXQ,EAAaR,EAAAA,EAAAA,GAAH,qPAYVS,EAAYT,EAAAA,EAAAA,GAAH,uHAMTU,EAAeV,EAAAA,EAAAA,QAAH,qFAKZW,GAAaX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAH,yQ,SCkBvB,EAzDkB,SAAC,GAAwD,IAAD,EAArDa,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnDC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACrB,EAAD,YACE,UAACE,EAAD,YACG,UAAAkB,EAASE,aAAT,eAAgBC,QACf,SAAC,KAAD,CAAMC,GAAIJ,EAASE,MAAMC,KAAzB,UACE,SAACpB,EAAD,OAGJ,SAACE,EAAD,UAAQS,QAEV,UAACR,EAAD,YACE,gBACEmB,IACEV,EAAQ,yCAC8BA,EAD9B,KAEJW,EAENC,IAAKb,EACLc,MAAM,QACNC,OAAO,QACPC,QAAQ,UAEV,UAACvB,EAAD,YACE,6BACE,mCADF,IACkBU,MAElB,6BACE,kCADF,IACiBD,YAIrB,UAACR,EAAD,YACE,uBAAIW,KACJ,SAACV,EAAD,CAAY,aAAW,UAAvB,SACGS,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACV,SAACvB,EAAD,UAAqBsB,GAALC,EADN,OAId,UAACtB,EAAD,YACE,SAACC,EAAD,CACEY,GAAI,OACJF,MAAO,CAAEC,KAAMH,EAASc,UAAY,WAFtC,mBAMA,SAACtB,EAAD,CAAYY,GAAI,UAAhB,0BAEF,SAAC,EAAAW,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAKT,C","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { MdOutlineArrowBackIosNew } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nexport const CardWrapper = styled.div`\n  display: grid;\n  height: 100%;\n  gap: 16px;\n`;\nexport const CardHeader = styled.div`\n  grid-row: 1;\n  grid-column: 1/3;\n  display: flex;\n  align-items: center;\n`;\nexport const Icon = styled(MdOutlineArrowBackIosNew)`\n  width: 30px;\n  height: 30px;\n  fill: royalblue;\n`;\nexport const Title = styled.h1``;\nexport const Side = styled.aside`\n  grid-column: 1;\n  grid-row: 2;\n`;\nexport const Votes = styled.p`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const MainDetails = styled.section`\n  grid-column: 2;\n  grid-row: 2;\n`;\nexport const GenresList = styled.ul`\n  padding: 0;\n  list-style-type: none;\n  display: flex;\n  grid-gap: 16px;\n\talign-items: center;\n  &::before{\n    content:attr(aria-label);\n    // font-size:120%;\n    font-weight:bold;\n\t\t// margin-left: -15px\n`;\nexport const GenreItem = styled.li`\n  border-radius: 30px;\n  padding: 4px 16px;\n  font-size: 14px;\n  background-color: silver;\n`;\nexport const LinksWrapper = styled.section`\n  display: flex;\n  grid-gap: 16px;\n  margin-bottom: 16px;\n`;\nexport const LinkStyled = styled(Link)`\n  color: currentColor;\n  text-decoration: none;\n  display: block;\n  padding: 4px 16px;\n  border-radius: 10px;\n  font-weight: 500;\n  background-color: gold;\n\n  &:hover {\n    color: currentColor;\n    background-color: #f5c518;\n  }\n`;\n","import defaultImg from 'images/no_poster.jpg';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport {\n  CardWrapper,\n  GenresList,\n  MainDetails,\n  Side,\n  CardHeader,\n  GenreItem,\n  LinkStyled,\n  LinksWrapper,\n  Votes,\n  Title,\n  Icon,\n} from './MovieCard.styled';\nconst MovieCard = ({ title, imageUrl, rate, votes, genres, overview }) => {\n  const location = useLocation();\n\n  return (\n    <CardWrapper>\n      <CardHeader>\n        {location.state?.from && (\n          <Link to={location.state.from}>\n            <Icon></Icon>\n          </Link>\n        )}\n        <Title>{title}</Title>\n      </CardHeader>\n      <Side>\n        <img\n          src={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w200${imageUrl} `\n              : defaultImg\n          }\n          alt={title}\n          width=\"250px\"\n          height=\"300px\"\n          loading=\"lazy\"\n        ></img>\n        <Votes>\n          <span>\n            <b>Votes: </b> {votes}\n          </span>\n          <span>\n            <b>Rate: </b> {rate}\n          </span>\n        </Votes>\n      </Side>\n      <MainDetails>\n        <p>{overview}</p>\n        <GenresList aria-label=\"Genres:\">\n          {genres.map(({ name, id }) => (\n            <GenreItem key={id}>{name}</GenreItem>\n          ))}\n        </GenresList>\n        <LinksWrapper>\n          <LinkStyled\n            to={'cast'}\n            state={{ from: location.pathname || '/movies' }}\n          >\n            Cast\n          </LinkStyled>\n          <LinkStyled to={'reviews'}> Reviews</LinkStyled>\n        </LinksWrapper>\n        <Suspense fallback={<div>Loading details...</div>}>\n          <Outlet />\n        </Suspense>\n      </MainDetails>\n    </CardWrapper>\n  );\n};\nexport default MovieCard;\n"],"names":["CardWrapper","styled","CardHeader","Icon","MdOutlineArrowBackIosNew","Title","Side","Votes","MainDetails","GenresList","GenreItem","LinksWrapper","LinkStyled","Link","title","imageUrl","rate","votes","genres","overview","location","useLocation","state","from","to","src","defaultImg","alt","width","height","loading","map","name","id","pathname","Suspense","fallback"],"sourceRoot":""}