{"version":3,"file":"static/js/742.fe92a7a3.chunk.js","mappings":"4OAGaA,EAAUC,EAAAA,EAAAA,KAAH,mNAWPC,EAAQD,EAAAA,EAAAA,MAAH,wIAOLE,GAAOF,EAAAA,EAAAA,GAAOG,EAAAA,IAAPH,CAAH,4H,SChBJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,GAAsCC,EAAAA,EAAAA,UAASF,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KASA,OACE,UAACV,EAAD,CAASW,SATM,SAAAC,GACfA,EAAEC,iBAEFN,EAASE,EACV,EAKC,WACE,SAACN,EAAD,CAAMW,QALc,SAAAF,GACtBL,EAASE,EACV,KAIG,SAACP,EAAD,CACEa,KAAK,OACLR,SAAU,SAAAK,GACRF,EAAeE,EAAEI,OAAOV,OACxBW,QAAQC,IAAI,mBAAoBN,EAAEI,OAAOV,MAC1C,EACDa,KAAK,QACLb,MAAOG,EACPW,YAAY,gBAInB,EC5BYpB,EAAUC,EAAAA,EAAAA,IAAH,0C,SCGPoB,EAAc,SAAC,GAMrB,IALLZ,EAKI,EALJA,YAKI,IAJJa,KAAAA,OAII,MAJG,EAIH,EAHJC,EAGI,EAHJA,aAGI,IAFJC,WAAAA,OAEI,MAFS,GAET,EADJC,EACI,EADJA,aAEA,OACE,UAAC,EAAD,YACE,SAACpB,EAAD,CAAWE,SAAUkB,EAAcnB,MAAOG,KAC1C,SAACiB,EAAA,EAAD,CACEF,WAAYA,EACZF,KAAMA,EACNC,aAAcA,MAIrB,E,mCCoCD,EAnDe,WAAO,IAAD,IACnB,GAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KACA,GAAoCpB,EAAAA,EAAAA,UAAS,GAA7C,eAAOgB,EAAP,KAAmBK,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACjDjB,QAAQC,IAAI,gBAAiBe,GAC7B,IAAME,EAAS,UAAGJ,EAAaG,IAAI,eAApB,QAA+B,GAC9CE,EAAAA,EAAAA,YAAU,WACHH,GAOHI,EAAAA,EAAAA,IAAa,CAAEC,MAAOL,EAAaX,KAAMa,IAAaI,MACpD,YAA+B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACVxB,QAAQC,IAAI,mBAAoBuB,GAChCb,EAAUY,GACVX,EAAcY,EACf,KAXHC,EAAAA,EAAAA,IAAY,CAAEpB,KAAMa,IAAaI,MAAK,YAA+B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAChDxB,QAAQC,IAAI,iBAAkBuB,GAC9Bb,EAAUY,GACVX,EAAcY,EACf,GAUJ,GAAE,CAACN,EAAWF,IAYf,OACE,6BACE,SAACZ,EAAD,CACEC,KAAMqB,OAAOR,GACbX,WAAYA,EACZf,YAAawB,EACbR,aAVqB,SAAAnB,GACzB0B,EAAgB1B,EAAQ,CAAEgC,MAAOhC,EAAOgB,KAAM,GAAM,CAAEgB,MAAO,GAAIhB,KAAM,GACxE,EASKC,aAjBmB,SAAAD,GACvB,IAAMsB,EAAiB,IAAIC,gBAC3BZ,GAAeW,EAAeE,OAAO,QAASb,GAC9CW,EAAeE,OAAO,OAAQxB,GAC9BU,EAAgBY,EACjB,KAcG,SAACG,EAAA,EAAD,CAAWpB,OAAQA,KACnB,SAAC,EAAAqB,SAAD,CAAUC,UAAU,8CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/FilterPanel/FilterPanel.styled.js","components/FilterPanel/FilterPanel.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  font-size: 15px;\n  line-height: 20px;\n  // width: 100%;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 32px 4px 8px;\n  border-radius: 4px;\n  border: 1px solid rgba(0, 0, 0, 0.8);\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  fill: rgba(0, 0, 0, 0.6);\n  right: 6px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { Wrapper, Input, Icon } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  const [searchQuery, setSearchQuery] = useState(value);\n  const onSubmit = e => {\n    e.preventDefault();\n\n    onChange(searchQuery);\n  };\n  const handleIconClick = e => {\n    onChange(searchQuery);\n  };\n  return (\n    <Wrapper onSubmit={onSubmit}>\n      <Icon onClick={handleIconClick} />\n      <Input\n        type=\"text\"\n        onChange={e => {\n          setSearchQuery(e.target.value);\n          console.log('e.target.value: ', e.target.value);\n        }}\n        name=\"query\"\n        value={searchQuery}\n        placeholder=\"Search...\"\n      />\n    </Wrapper>\n  );\n};\nSearchBox.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n","import { SearchBox } from 'components/SearchBox/SearchBox';\nimport PropTypes from 'prop-types';\nimport { Wrapper } from './FilterPanel.styled';\nimport { Pagination } from 'components/Pagination/Pagination';\n\nexport const FilterPanel = ({\n  searchQuery,\n  page = 1,\n  onPageChange,\n  totalPages = 20,\n  changeSearch,\n}) => {\n  return (\n    <Wrapper>\n      <SearchBox onChange={changeSearch} value={searchQuery} />\n      <Pagination\n        totalPages={totalPages}\n        page={page}\n        onPageChange={onPageChange}\n      />\n    </Wrapper>\n  );\n};\nFilterPanel.propTypes = {\n  onPageChange: PropTypes.func,\n  changeSearch: PropTypes.func,\n  searchQuery: PropTypes.string,\n  page: PropTypes.number,\n  totalPages: PropTypes.number,\n};\n","import { FilterPanel } from 'components/FilterPanel/FilterPanel';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { getTrending, searchMovies } from 'moviesApi';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchParam = searchParams.get('query') ?? '';\n  console.log('searchParam: ', searchParam);\n  const pageParam = searchParams.get('page') ?? 1;\n  useEffect(() => {\n    if (!searchParam) {\n      getTrending({ page: pageParam }).then(({ results, total_pages }) => {\n        console.log(' total_pages: ', total_pages);\n        setMovies(results);\n        setTotalPages(total_pages);\n      });\n    } else {\n      searchMovies({ query: searchParam, page: pageParam }).then(\n        ({ results, total_pages }) => {\n          console.log(' total_pages 3: ', total_pages);\n          setMovies(results);\n          setTotalPages(total_pages);\n        }\n      );\n    }\n  }, [pageParam, searchParam]);\n\n  const handlePageChange = page => {\n    const newSearchQuery = new URLSearchParams();\n    searchParam && newSearchQuery.append('query', searchParam);\n    newSearchQuery.append('page', page);\n    setSearchParams(newSearchQuery); // setPage(page);\n  };\n  const handleChangeFilter = value => {\n    setSearchParams(value ? { query: value, page: 1 } : { query: '', page: 1 });\n  };\n\n  return (\n    <main>\n      <FilterPanel\n        page={Number(pageParam)}\n        totalPages={totalPages}\n        searchQuery={searchParam}\n        changeSearch={handleChangeFilter}\n        onPageChange={handlePageChange}\n      />\n      <MovieList movies={movies} />\n      <Suspense fallback={<div>Loading data....</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","onClick","type","target","console","log","name","placeholder","FilterPanel","page","onPageChange","totalPages","changeSearch","Pagination","movies","setMovies","setTotalPages","useSearchParams","searchParams","setSearchParams","searchParam","get","pageParam","useEffect","searchMovies","query","then","results","total_pages","getTrending","Number","newSearchQuery","URLSearchParams","append","MovieList","Suspense","fallback"],"sourceRoot":""}